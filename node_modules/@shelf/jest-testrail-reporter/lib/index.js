"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _testrailApi = _interopRequireDefault(require("testrail-api"));

var _debug = _interopRequireDefault(require("debug"));

var _helpers = require("./helpers");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const debug = (0, _debug.default)('jest-testrail-reporter'); // eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-expect-error

class TestRailReporter {
  async onRunComplete(contexts, results) {
    const testrail = new _testrailApi.default({
      host: process.env.TESTRAIL_HOST,
      user: process.env.TESTRAIL_EMAIL,
      password: process.env.TESTRAIL_PASSWORD
    });
    debug('onRunComplete results.testResults', results.testResults);

    if (!process.env.TESTRAIL_HOST || !process.env.TESTRAIL_EMAIL || !process.env.TESTRAIL_PASSWORD) {
      console.log('TestRail Reporter: Skipping since no credentials setup');
      return;
    }

    const testRuns = results.testResults.filter(testResult => !testResult.skipped).map(testResult => testResult.testResults).flat().filter(test => test.title.startsWith('#C'));
    debug('onRunComplete testRuns', testRuns);
    const allCaseIds = testRuns.map(({
      title
    }) => (0, _helpers.getCaseIdFromTestTitle)(title));
    debug('onRunComplete allCaseIds', allCaseIds);

    try {
      // eslint-disable-next-line @typescript-eslint/ban-ts-comment
      // @ts-expect-error
      const {
        body: run
      } = await testrail.addRun(Number(process.env.TESTRAIL_PROJECT_ID), {
        case_ids: allCaseIds,
        include_all: false,
        name: ''
      });
      const runId = run.id;
      debug('TestRail: Created Run', run);
      const {
        body: resp
      } = await testrail.addResultsForCases(runId, (0, _helpers.getTestRunsResults)(testRuns));
      debug('TestRail: Added Results for Cases', resp);
      const {
        body: respCloseRun
      } = await testrail.closeRun(runId);
      debug('TestRail: Closed Run', respCloseRun);
    } catch (error) {
      console.error(error);
    }
  }

}

exports.default = TestRailReporter;